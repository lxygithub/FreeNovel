apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        multiDexEnabled true
        applicationId "cn.mewlxy.novel"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion = '28.0.3'

}
kotlin {
    experimental {
        coroutines 'enable'
    }
    androidExtensions {
        experimental = true
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'org.jsoup:jsoup:1.12.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'pub.devrel:easypermissions:2.0.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0-beta.1'
    implementation 'org.jsoup:jsoup:1.12.1'
    implementation 'com.google.android.material:material:1.2.0-alpha03'
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    //                                       üëá ‰æùËµñÂçèÁ®ãÊ†∏ÂøÉÂ∫ì
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines"
    //                                       üëá ‰æùËµñÂΩìÂâçÂπ≥Âè∞ÊâÄÂØπÂ∫îÁöÑÂπ≥Âè∞Â∫ì
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines"


    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
    //     AndroidX libraries use this lightweight import for Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime:2.1.0"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:2.1.0"

    implementation 'com.github.wangpeiyuan:CycleViewPager2:v1.0.7'


    def room_version = "2.2.3"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"


    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"



    implementation project(path: ':readerlib')

    // debugImplementation because LeakCanary should only run in debug builds.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

    // RxJava
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    api 'io.reactivex.rxjava2:rxjava:2.0.1'
    api 'org.reactivestreams:reactive-streams:1.0.0'

    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    api 'com.github.bumptech.glide:glide:4.9.0'

    implementation 'androidx.multidex:multidex:2.0.1'

}
repositories {
    mavenCentral()
}
