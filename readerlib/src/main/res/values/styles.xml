<resources>
    <style name="HwTxtFullScreen" parent="Theme.AppCompat.NoActionBar">
        <item name="android:windowFullscreen">true</item>
        <item name="android:windowNoTitle">true</item>
        <item name="windowActionBar">false</item>
    </style>
    <style name="HwTxtChapterMenuAnimation"  parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/abc_popup_enter</item>
        <item name="android:windowExitAnimation">@anim/abc_popup_exit</item>
    </style>



    <!--标题颜色-->
    <attr name="titleColor" format="reference"/>
    <!--背景色-->
    <attr name="appBg" format="reference"/>
    <!--页面中的小标题-->
    <attr name="smallColor" format="reference"/>


    <declare-styleable name="HeadLayout">
        <attr name="showHead" format="boolean" />
        <attr name="headText" format="reference" />
        <attr name="headImg" format="reference" />
        <attr name="rightText" format="reference" />
        <attr name="showRightText" format="boolean" />
        <attr name="rightImg" format="reference" />

    </declare-styleable>

    <declare-styleable name="VpTabLayout">
        <attr name="oneText" format="reference"/>
        <attr name="twoText" format="reference"/>
        <attr name="threeText" format="reference"/>
    </declare-styleable>

    <declare-styleable name="RefreshLayout">
        <attr name="layout_refresh_empty" format="reference"/>
        <attr name="layout_refresh_error" format="reference"/>
        <attr name="layout_refresh_loading" format="reference"/>
    </declare-styleable>

    <style name="dialog" parent="@android:style/Theme.Dialog">
        <item name="android:windowFrame">@null</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:background">@android:color/transparent</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:backgroundDimEnabled">true</item>
        <item name="android:backgroundDimAmount">0.6</item>
    </style>
    <style name="anim_slide_left_in_right_out" parent="android:Animation.Dialog">
        <item name="android:windowEnterAnimation">@anim/slide_left_in</item>
        <item name="android:windowExitAnimation">@anim/slide_right_out</item>
    </style>

    <!--animation-->
    <style name="anim_slide_bottom_in_out" parent="android:Animation.Dialog">
        <item name="android:windowEnterAnimation">@anim/slide_bottom_in</item>
        <item name="android:windowExitAnimation">@anim/slide_bottom_out</item>
    </style>
    <!--Dialog-->
    <style name="CommonDialog" parent="@style/Theme.AppCompat.Light.Dialog">
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowFrame">@null</item>
        <item name="android:windowIsFloating">true</item>
        <item name="android:backgroundDimEnabled">false</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <!--必须要加上这句才能实现真正的半透明，-->
        <item name="android:windowIsTranslucent">false</item>
        <!--直接写windowEnter或者windowExit 是无效的-->
        <item name="android:windowAnimationStyle">@style/anim_slide_left_in_right_out</item>
    </style>


    <style name="ReadSettingDialog" parent="CommonDialog">
        <item name="android:windowAnimationStyle">@style/anim_slide_bottom_in_out</item>
    </style>


    <style name="ActionButton.Overflow.Menu" parent="android:style/Widget.Holo.Light.ActionButton.Overflow">
        <item name="android:src">@drawable/select_more</item>
    </style>
    <style name="OverflowMenuStyle" parent="@style/Widget.AppCompat.PopupMenu.Overflow">
        <!-- 是否覆盖锚点，默认为true，即盖住Toolbar -->
        <item name="overlapAnchor">false</item>
        <item name="android:dropDownWidth">wrap_content</item>
        <item name="android:paddingRight">0dp</item>
        <!-- 弹出层背景颜色 -->
        <item name="android:popupBackground">@color/colorPrimary</item>
        <!--<item name="android:background">@drawable/ic_menu_bg</item>-->
        <!-- 弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar -->
        <item name="android:dropDownVerticalOffset">-7dp</item>
        <!-- 弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙 -->
        <item name="android:dropDownHorizontalOffset">0dp</item>
        <!-- 设置弹出菜单文字颜色 -->
        <item name="android:textColor">@color/colorTitle</item>
        <!--<item name="android:dropDownListViewStyle">@style/AppDropDownListViewStyle</item>-->
    </style>
    <!--用于修改popmenu的分割线-->
    <style name="dropDownStyle" parent="android:style/Widget.Holo.ListView.DropDown">
        <item name="android:listSelector">@color/white</item>
        <item name="android:divider">@color/colorLine</item>
        <item name="android:dividerHeight">0.5dp</item>
    </style>
    <!--Read Toolbar start-->
    <style name="Theme.ToolBar.Menu" parent="ThemeOverlay.AppCompat.Dark.ActionBar">
        <!-- 设置-弹窗的背景-颜色-->
        <item name="android:colorBackground">@color/white</item>
        <!-- 字体的颜色-->
        <item name="android:textColor">@color/black</item>
        <!-- 字体大小-->
        <item name="android:textSize">16sp</item>
        <item name="android:gravity">center_vertical</item>
        <!-- 用于替换菜单的三个小白点，换成自已的图片-->
        <item name="actionOverflowButtonStyle">@style/ActionButton.Overflow.Menu</item>
        <!--用于控制menu弹出的位置，位于toolbar的下面，而不是上面-->
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
        <!-- 用于修改item默认的分割线-->
        <item name="android:dropDownListViewStyle">@style/dropDownStyle</item>
        <item name="dropDownListViewStyle">@style/dropDownStyle</item>
    </style>
</resources>
